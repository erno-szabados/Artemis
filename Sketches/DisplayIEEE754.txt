
(* My implementation *)
PROCEDURE DisplayIeee754(x : REAL);
  VAR raw : INTEGER;
BEGIN
  SYSTEM.GET(SYSTEM.ADR(r), raw);

  IF SYSTEM.BIT(raw, 31) THEN
    Out.String("sign is -, ");
  ELSE
    Out.String("sign is +, "
  END;
  Out.String(" expo (binary): ");
  FOR i := 24 TO 31 DO
    IF SYSTEM.BIT(raw, i) THEN
      Out.Char("1"); 
    ELSE
      Out.Char("0"); 
    END;
  END;
  Out.String(" frac (binary): ");
  FOR i := 0 TO 23 DO
    IF SYSTEM.BIT(raw, i) THEN
      Out.Char("1"); 
    ELSE
      Out.Char("0"); 
    END;
  END;
  Out.Ln;
END DisplayIeee754;

(* Jörg Schrieb implementation from ETH mail list *)
PROCEDURE DisplayIEEE754(x: REAL);
  VAR s: SET;

  PROCEDURE Bits(str: ARRAY OF CHAR; s: SET; left, right: INTEGER);
  BEGIN
    Out.String(str);
    FOR i := left TO right BY -1 DO
      IF i IN s THEN Out.Char(“1“) ELSE Out.Char(“0“) END
    END
  END Bits;

BEGIN
  s := SYSTEM.VAL(SET, x);
  Out.String(“sign is “); IF 31 IN s THEN Out.Ch(“-“) ELSE Out.Ch(“+“) END;
  Bits(“, expo (binary): “, s, 30, 23)
  Bits(“ frac (binary): “, s, 22, 0);
  Out.Ln
END DisplayIEEE754;


