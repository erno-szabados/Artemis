(* HttpUrlTokenizer.Mod - Character-based tokenizer for HTTP URLs.

Copyright (C) 2025 Artemis Project Contributors

Released under The 3-Clause BSD License.
*)

DEFINITION HttpUrlTokenizer;

(* This module provides a tokenizer for HTTP URLs, allowing parsing of
   various components like scheme, host, port, path, query parameters,
   and fragments. It supports basic error handling and state management. *)

IMPORT DStrings;

CONST
    EofToken = 0;
    SchemeToken = 1;
    SlashSlashToken = 2;
    HostToken = 3;
    PortToken = 4;
    PathToken = 5;
    QueryStartToken = 6;
    QueryKeyToken = 7;
    QueryEqualsToken = 8;
    QueryValueToken = 9;
    QuerySeparatorToken = 10;
    FragmentStartToken = 11;
    FragmentToken = 12;
    ErrorToken = 13;

    NoError = 0;
    SyntaxError = 1;

TYPE
    Token = RECORD
        type: INTEGER;
        value: DStrings.String;
        rider: DStrings.Rider;
        error: INTEGER
    END;

    Tokenizer = POINTER TO TokenizerDesc;

(* Initialize tokenizer with raw URL string *)
PROCEDURE Init(VAR tokenizer: Tokenizer; raw: ARRAY OF CHAR);

(* TRUE if tokenizer has reached end of input *)
PROCEDURE AtEof(tokenizer: Tokenizer): BOOLEAN;

PROCEDURE NextToken(tokenizer: Tokenizer; VAR token: Token);

(* Get current position in input *)
PROCEDURE GetPos(tokenizer: Tokenizer): INTEGER;

(* Get current error state *)
PROCEDURE GetError(tokenizer: Tokenizer): INTEGER;

END HttpUrlTokenizer.
