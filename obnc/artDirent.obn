(**
    artDirent - POSIX directory operations wrapper
    
    Provides safe, opaque directory enumeration with automatic resource management.
    Implementation details are completely hidden from clients.
    
    Copyright (C) 2025
    Released under The 3-Clause BSD License.
    Author: Artemis Project
*)
MODULE artDirent;

TYPE
    (** Opaque directory scanner - implementation completely hidden *)
    DirScanner* = POINTER TO DirScannerDesc;
    DirScannerDesc = RECORD
    (* C implementation used for the opaque pointer *)
    END;

(** Open directory for scanning *)
PROCEDURE OpenScanner*(path: ARRAY OF CHAR): DirScanner;
VAR scanner: DirScanner;
BEGIN
   (* Placeholder, implementation is in C. *)
    RETURN scanner
END OpenScanner;

(* Not exported, calls the C implementation *)
PROCEDURE NextEntryC(scanner: DirScanner; VAR name: ARRAY OF CHAR; nameLen: INTEGER; VAR isDirectory: BOOLEAN): BOOLEAN;
BEGIN
    (* Placeholder, implemented in C *)
    RETURN FALSE
END NextEntryC;

(** Get next entry - returns TRUE if entry found, FALSE if done/error *)
PROCEDURE NextEntry*(scanner: DirScanner; VAR name: ARRAY OF CHAR; VAR isDirectory: BOOLEAN): BOOLEAN;
BEGIN
    RETURN NextEntryC(scanner, name, LEN(name), isDirectory)
END NextEntry;


(** Close scanner and free resources - always call when done *)
PROCEDURE CloseScanner*(VAR scanner: DirScanner);
BEGIN
   (* Placeholder, implementation is in C. *)
END CloseScanner;

(** Check if scanner is valid (not closed/error) *)
PROCEDURE IsValid*(scanner: DirScanner): BOOLEAN;
VAR result: BOOLEAN;
BEGIN
   (* Placeholder, implementation is in C. *)
    RETURN result
END IsValid;

END artDirent.